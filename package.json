{
  "name": "trilium",
  "description": "development scripts and dependencies",
  "private": true,
  "scripts": {
    "initialize": "dotenv run terragrunt init",
    "plan": "dotenv run terragrunt plan",
    "validate": "dotenv run terragrunt validate",
    "apply": "dotenv run terragrunt apply",
    "output:json": "dotenv run terragrunt output -json > output.json",
    "graph": "dotenv run terragrunt graph -draw-cycles > graph.gv && dot -Tsvg graph.gv > graph.svg",
    "key:generate": "ssh-keygen -t rsa -m PEM -f .keypair.pem -N '' -C '' && chmod 400 .keypair.pem",
    "fmt:check": "terraform fmt -check -diff -recursive",
    "fmt": "terraform fmt -recursive",
    "lint": "tflint",
    "lint:ci": "tflint -f compact",
    "connect": "ssh -i .keypair.pem $(jq -r '.app_instance_username.value' output.json)@$(jq -r '.app_instance_public_ip.value' output.json)",
    "restart:app": "yarn connect sudo docker restart $(jq -r '.app_container_name_prefix.value' output.json)1",
    "download:db": "scp -i .keypair.pem $(jq -r '.app_instance_username.value' output.json)@$(jq -r '.app_instance_public_ip.value' output.json):$(jq -r '.data_volume_mount_path.value' output.json)/document.db .",
    "upload:db": "scp -i .keypair.pem document.db $(jq -r '.app_instance_username.value' output.json)@$(jq -r '.app_instance_public_ip.value' output.json):$(jq -r '.data_volume_mount_path.value' output.json)/document.db",
    "tf-docs": "terraform-docs . -c .terraform-docs.yml"
  }
}
